import{Q as d,a as te}from"./QTr.62155810.js";import{c9 as ne,c8 as ae,r as y,j as re,aI as f,a5 as S,u as l,P as i,a3 as D,bb as r,b as oe,d as n,ac as v,bD as N,bE as w,a6 as E,a4 as $}from"./index.4cc15ae0.js";import{Q as U}from"./QInput.b6b22fe0.js";import{Q as se,a as le,p as ie,b as B,c as ue,d as de}from"./paginations.e029229d.js";import{a as me,Q as g}from"./QCard.ad75a669.js";import{e as ce,a as pe}from"./excel.5d19a2ad.js";import{a as ve}from"./use-quasar.b9178eb8.js";import{a as _e,u as q}from"./index.14e2de4d.js";import{g as ye,p as P}from"./module_calls.421761b7.js";import{u as fe}from"./product-store.182fc3a9.js";import{u as ge}from"./measurement-store.c678bbdf.js";import{u as be}from"./department-store.d797be5f.js";import"./use-dark.f889e447.js";import"./QSeparator.ff169c9f.js";import"./rtl.dae9c57e.js";import"./helpers.73a7253f.js";const M=[{name:"product",required:!0,label:"Product",align:"left",field:s=>s.name,format:s=>`${s}`,sortable:!0},{name:"buying_price",align:"center",label:"Buying Price",field:"buying_price",sortable:!0},{name:"quantity",align:"center",label:"Quantity",field:"quantity",sortable:!0},{name:"measurement",align:"center",label:"Measurement",field:"measurement",sortable:!0},{name:"department",align:"center",label:"Department",field:"department",sortable:!0},{name:"user",align:"center",label:"Created By",field:"user",sortable:!0},{name:"created_at",align:"center",label:"Created On",field:"created_at",sortable:!0},{name:"actions",align:"center",label:"Actions",field:"created_at"}],b=ne(),m=b==null?void 0:b.token,ke=ae("inventories",{state:()=>({inventories:[]}),actions:{async fetchInventories(){if(m){const s=await ye("inventories",m);return this.inventories=s==null?void 0:s.data,this.inventories}},async createInventory(s){var c;if(s.user_uuid=(c=b==null?void 0:b.user)==null?void 0:c.uuid,m)return await P(s,"inventories",m)},async updateInventory(s){if(m)return await P(s,"update_inventory",m)},async deleteInventory(s){if(m)return await P(s,"delete_inventory",m)}}});const we={class:"q-pa-md"},Ie={key:0},Ve={key:1},Qe={class:"text-h6"},qe={class:"text-center error_msg"},je={__name:"Inventories",setup(s){const c=ve(),I=_e(),V=ke(),z=fe(),L=ge(),j=be(),C=ie(10),p=y(!1),k=y(!1),h=y(""),Q=y(""),a=re({product_id:"",measurement_id:"",department_id:"",quantity:1,buying_price:1}),x=y(""),_=y(""),{data:A,isLoading:F,isError:T}=q("inventories",()=>V.fetchInventories()),{data:O}=q("products",()=>z.fetchProducts()),{data:R}=q("measurements",()=>L.fetchMeasurements()),{data:G}=q("departments",()=>j.fetchDepartments()),H=async o=>{if(confirm(`Continue with the operation. Delete ${o.name} ?`)){const e=await V.deleteInventory({uuid:o.uuid});e.status==="success"?(I.refetchQueries("inventories"),u(e.message,"green","top")):u("There was an error","red","top-right")}},J=()=>{Q.value="Add New Inventory",p.value=!0,k.value=!1},K=o=>{k.value=!0,Q.value=`Edit ${o.name}`,inventory_name.value=o.name,x.value=o.uuid,p.value=!0},W=async()=>{_.value="";const o={product_uuid:a.product_id.uuid,department_uuid:a.department_id.uuid,measurement_uuid:a.measurement_id.uuid,quantity:a.quantity,buying_price:a.buying_price};if(o.product_uuid&&o.department_uuid&&o.measurement_uuid){const t=await V.createInventory(o);t.status==="success"?(I.refetchQueries("inventories"),a.product_id="",a.department_id="",a.measurement_id="",a.quantity=1,a.buying_price=1,p.value=!1,u(t.message,"green","top")):(_.value=t.message,u(t.message,"red","top-right"))}else _.value="Name is required!",u("Name is required!","red","top-right")},X=async()=>{const o={name:inventory_name.value.trim(),uuid:x.value};if(o.name){const t=await V.updateInventory(o);t.status==="success"?(I.refetchQueries("inventories"),inventory_name.value="",p.value=!1,k.value=!1,Q.value="",u(t.message,"green","top")):u("There was an error","red","top-right")}else _.value="Name is required!",u("Name is required!","red","top-right")},Y=()=>{p.value=!1,inventory_name.value="",x.value="",_.value=""},u=(o,t,e)=>{c.notify({message:o,color:t,position:e})},Z=o=>{const t=o.map(e=>({name:e.name,inventories:e.inventories.length,created_at:e.created_at}));ce(t,M,pe,c,"InventoriesData")};return(o,t)=>(f(),S("div",we,[l(F)?(f(),S("div",Ie,"Loading inventories...")):l(T)?(f(),S("div",Ve,"An error has occurred: "+i(l(T)),1)):(f(),D(se,{key:2,title:"Inventories",rows:l(A),columns:l(M),pagination:l(C),"onUpdate:pagination":t[2]||(t[2]=e=>oe(C)?C.value=e:null),separator:"cell","row-key":"name",filter:h.value,dense:""},{body:r(e=>[n(te,{props:e},{default:r(()=>[n(d,{key:"product",props:e},{default:r(()=>[v(i(e.row.product),1)]),_:2},1032,["props"]),n(d,{key:"buying_price",props:e},{default:r(()=>[v(i(e.row.buying_price),1)]),_:2},1032,["props"]),n(d,{key:"quantity",props:e},{default:r(()=>[v(i(e.row.quantity),1)]),_:2},1032,["props"]),n(d,{key:"measurement",props:e},{default:r(()=>[v(i(e.row.measurement),1)]),_:2},1032,["props"]),n(d,{key:"department",props:e},{default:r(()=>[v(i(e.row.department),1)]),_:2},1032,["props"]),n(d,{key:"user",props:e},{default:r(()=>[v(i(e.row.user),1)]),_:2},1032,["props"]),n(d,{key:"created_at",props:e},{default:r(()=>[v(i(e.row.created_at),1)]),_:2},1032,["props"]),n(d,{key:"actions",props:e},{default:r(()=>[n(N,{color:"blue",name:"edit",onClick:ee=>K(e.row),style:{cursor:"pointer"},size:"20px",class:"q-mr-md"},null,8,["onClick"]),n(N,{color:"red",name:"delete",onClick:ee=>H(e.row),style:{cursor:"pointer"},size:"20px"},null,8,["onClick"])]),_:2},1032,["props"])]),_:2},1032,["props"])]),"top-right":r(()=>[n(U,{borderless:"",dense:"",outlined:"",rounded:"",debounce:"300",modelValue:h.value,"onUpdate:modelValue":t[0]||(t[0]=e=>h.value=e),placeholder:"Search",class:"q-mr-md"},{append:r(()=>[n(N,{name:"search"})]),_:1},8,["modelValue"]),n(w,{onClick:J,round:"",dense:"",color:"primary",size:"small",icon:"add"}),n(w,{dense:"",flat:"",color:"primary","icon-right":"archive",label:"Export",class:"q-ml-sm","no-caps":"",onClick:t[1]||(t[1]=e=>Z(l(A)))})]),_:1},8,["rows","columns","pagination","filter"])),n(le,{modelValue:p.value,"onUpdate:modelValue":t[8]||(t[8]=e=>p.value=e),persistent:""},{default:r(()=>[n(me,{style:{width:"500px"}},{default:r(()=>[n(g,null,{default:r(()=>[E("div",Qe,i(Q.value),1)]),_:1}),n(g,null,{default:r(()=>[n(B,{dense:"",outlined:"",modelValue:a.product_id,"onUpdate:modelValue":t[3]||(t[3]=e=>a.product_id=e),options:l(O),"option-value":"uuid","option-label":"name",label:"Select Product"},null,8,["modelValue","options"])]),_:1}),n(g,null,{default:r(()=>[n(B,{dense:"",outlined:"",modelValue:a.measurement_id,"onUpdate:modelValue":t[4]||(t[4]=e=>a.measurement_id=e),options:l(R),"option-value":"uuid","option-label":"name",label:"Select Measurement"},null,8,["modelValue","options"])]),_:1}),n(g,null,{default:r(()=>[n(B,{dense:"",outlined:"",modelValue:a.department_id,"onUpdate:modelValue":t[5]||(t[5]=e=>a.department_id=e),options:l(G),"option-value":"uuid","option-label":"name",label:"Select Department"},null,8,["modelValue","options"])]),_:1}),n(g,null,{default:r(()=>[n(U,{dense:"",outlined:"",modelValue:a.quantity,"onUpdate:modelValue":t[6]||(t[6]=e=>a.quantity=e),label:"Product Quantity",type:"number"},null,8,["modelValue"])]),_:1}),n(g,null,{default:r(()=>[n(U,{dense:"",outlined:"",modelValue:a.buying_price,"onUpdate:modelValue":t[7]||(t[7]=e=>a.buying_price=e),label:"Buying Price",type:"number"},null,8,["modelValue"])]),_:1}),E("div",qe,[E("small",null,i(_.value),1)]),n(ue,{align:"right"},{default:r(()=>[n(w,{flat:"",label:"Cancel",color:"red",onClick:Y}),n(de),a.product_id&&!k.value?(f(),D(w,{key:0,flat:"",label:"Add Inventory",color:"primary",onClick:W})):$("",!0),a.product_id&&k.value?(f(),D(w,{key:1,flat:"",label:"Edit Inventory",color:"primary",onClick:X})):$("",!0)]),_:1})]),_:1})]),_:1},8,["modelValue"])]))}};export{je as default};
